<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Diassoft.Mvvm</name>
    </assembly>
    <members>
        <member name="T:Diassoft.Mvvm.CommandBase">
            <summary>
            The base class for a Mvvm Command
            </summary>
        </member>
        <member name="M:Diassoft.Mvvm.CommandBase.CanExecute(System.Object)">
            <summary>
            Funcition to define whether the commmand can be executed or not
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Diassoft.Mvvm.CommandBase.Execute(System.Object)">
            <summary>
            Method to execute the commamnd action
            </summary>
            <param name="parameter">Command Input Parameter</param>
        </member>
        <member name="M:Diassoft.Mvvm.CommandBase.Requery">
            <summary>
            Method that recalculate the command availability to run
            </summary>
        </member>
        <member name="M:Diassoft.Mvvm.CommandBase.Requery(System.Object)">
            <summary>
            Method that recalculate the command availability to run
            </summary>
            <param name="parameter">Command Input Parameter</param>
        </member>
        <member name="T:Diassoft.Mvvm.ObservableObject">
            <summary>
            Represents a Mvvm Observable Object
            All classes that inherit from this class must implement the SetProperty of the Setters inside properties.
            </summary>
        </member>
        <member name="E:Diassoft.Mvvm.ObservableObject.PropertyChanged">
            <summary>
            The event triggered when a property value is changed
            </summary>
        </member>
        <member name="M:Diassoft.Mvvm.ObservableObject.OnPropertyChanged(System.String)">
            <summary>
            Event handler for the On Property Changed Event
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Diassoft.Mvvm.ObservableObject.SetProperty``1(``0@,``0,System.String)">
            <summary>
            Sets the Property Value if it changed. Notify proper listeners.
            </summary>
            <typeparam name="T">Type of the Property</typeparam>
            <param name="storage">Reference to the Property (must have a get and set)</param>
            <param name="value">Desired value for the property</param>
            <param name="propertyName">The property name itself</param>
            <returns>
            <see cref="T:System.Boolean">True / False</see> to define whether the value changed or not.
            </returns>
        </member>
        <member name="T:Diassoft.Mvvm.RelayCommand`1">
            <summary>
            Represents a Relay Command. The Command Design Pattern is used in MVVM.
            A RelayCommand is a generic implementation of a command that accepts one parameter of any given type (using generics).
            </summary>
            <typeparam name="T">The <see cref="T:System.Type">Type</see> of the Parameter that the command will receive. If there is no strong-typed parameter, use <see cref="T:System.Object">object.</see></typeparam>
        </member>
        <member name="M:Diassoft.Mvvm.RelayCommand`1.#ctor(System.Action{`0})">
            <summary>
            Initializes a new instance of a Relay Command
            </summary>
            <param name="execute">Reference to the method which will perform the command action</param>
        </member>
        <member name="M:Diassoft.Mvvm.RelayCommand`1.#ctor(System.Action{`0},System.Predicate{`0})">
            <summary>
            Initializes a new instance of a Relay Command
            </summary>
            <param name="execute">Reference to the method which will perform the command action</param>
            <param name="canExecute">Reference to the function to define whether the command can be executed or not</param>
        </member>
        <member name="M:Diassoft.Mvvm.RelayCommand`1.CanExecute(System.Object)">
            <summary>
            Checks if a command can be executed
            </summary>
            <param name="parameter">The command parameter</param>
            <returns></returns>
        </member>
        <member name="E:Diassoft.Mvvm.RelayCommand`1.CanExecuteChanged">
            <summary>
            Event triggered when the CanExecute property has changed
            </summary>
        </member>
        <member name="M:Diassoft.Mvvm.RelayCommand`1.Execute(System.Object)">
            <summary>
            Executes the Command Action
            </summary>
            <param name="parameter">The command parameter</param>
        </member>
        <member name="T:Diassoft.Mvvm.RelayCommand">
            <summary>
            Represents a Relay Command to be used in MVVM.
            A Relay Command allows you to point to methods and functions to perform the commmand tasks.
            This command is compatible with Xamarin Forms.
            </summary>
        </member>
        <member name="M:Diassoft.Mvvm.RelayCommand.#ctor(System.Action{System.Object})">
            <summary>
            Initializes a new Relay Command
            </summary>
            <param name="handler">Delegate to the Command Action</param>
        </member>
        <member name="M:Diassoft.Mvvm.RelayCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
            <summary>
            Initializes a new Relay Command
            </summary>
            <param name="handler">Delegate to the Command Action</param>
            <param name="canExecute">Delegate to a Function that will validate if the command can be executed</param>
        </member>
        <member name="P:Diassoft.Mvvm.RelayCommand.IsEnabled">
            <summary>
            Defines whether the command is enabled or not
            </summary>
        </member>
        <member name="M:Diassoft.Mvvm.RelayCommand.CanExecute(System.Object)">
            <summary>
            Defines if the command can be executed or not
            </summary>
            <param name="parameter">The command input parameter</param>
            <returns><see cref="T:System.Boolean"/>True when the Command Can be Executed, False when it cannot be executed</returns>
        </member>
        <member name="M:Diassoft.Mvvm.RelayCommand.Requery">
            <summary>
            Verify if the command can be executed. This method is used internally to validate the commands.
            </summary>
        </member>
        <member name="M:Diassoft.Mvvm.RelayCommand.Requery(System.Object)">
            <summary>
            Verify if the command can be executed. This method is used internally to validate the commands.
            </summary>
            <param name="parameter">The Command Input Parameter</param>
        </member>
        <member name="E:Diassoft.Mvvm.RelayCommand.CanExecuteChanged">
            <summary>
            Event to be triggered when the CanExecute value changes
            </summary>
        </member>
        <member name="M:Diassoft.Mvvm.RelayCommand.Execute(System.Object)">
            <summary>
            Executes the command
            </summary>
            <param name="parameter">A generic input parameter of the command</param>
        </member>
    </members>
</doc>
